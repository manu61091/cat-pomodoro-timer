{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "Footer.svelte",
    "Header.svelte",
    "Options.svelte",
    "Tabs.svelte",
    "Timer.svelte"
  ],
  "sourcesContent": [
    "<footer>\n    <div class=\"copyright\">Copyright 2020 Ariel the cat</div>\n</footer>\n\n<style>\n    footer{\n        text-align: center;\n        padding: 30px;\n    }\n    .copyright{\n        text-align: center;\n        padding: 30px;\n        border-top: 4px solid lightslategray;\n        color: lightslategrey;\n        display: inline-block;\n    }\n</style>",
    "<header>\n    <h1>\n        <img src=\"/img/logo.png\" alt=\"banner-img\">\n    </h1>\n    <h1>Don't waste your time!</h1>\n</header>\n\n<style>\n    header{\n        background: rgb(240,240, 240);\n        padding: 20px;\n    }\n    h1{\n        margin: 0;\n        text-align: center;\n        text-transform: uppercase;\n        font-size: 30px;\n    }\n    h1 img{\n        max-width: 140px;\n    }\n</style>",
    "<script>    \n\timport { fade,slide,scale } from 'svelte/transition';\n    import { createEventDispatcher } from 'svelte';\n    import TimerStore from '../stores/TimerStore';\n\n    const dispatch = createEventDispatcher();\n    \n    let fields = $TimerStore;\n    let updatedFields = fields;\n    let valid = true;\n    \n    const submitHandler = () =>{\n        if (updatedFields.focusTime <= 0 | updatedFields.shortBreakTime <= 0 | updatedFields.longBreakTime <= 0 | updatedFields.sessionRounds <= 0){\n            fields = {focusTime: 20, shortBreakTime: 5, longBreakTime: 25, sessionRounds: 4};\n            TimerStore.update(fields =>{\n                console.log(fields);\n                return fields;\n            });\n            valid = false;\n        }\n        else{\n            TimerStore.update(fields =>{\n                return updatedFields;\n            });\n            dispatch('handleOptions');\n        } \n        \n    }\n    </script>\n    \n    <form in:fade on:submit|preventDefault={submitHandler}>\n        <div class=\"form-field\">\n            <label for=\"focus-time\">Stay Focus Time</label>\n            <input type=\"number\" id=\"focus-time\" min=\"1\" bind:value={updatedFields.focusTime}>\n        </div>\n        <div class=\"form-field\">\n            <label for=\"short-break-time\">Short Break Time</label>\n            <input type=\"number\" id=\"short-break-time\" min=\"1\" bind:value={updatedFields.shortBreakTime}>\n        </div>\n        <div class=\"form-field\">\n            <label for=\"long-break-time\">Long Break Time</label>\n            <input type=\"number\" id=\"long-break-time\" min=\"1\" bind:value={updatedFields.longBreakTime}>\n        </div>\n        <div class=\"form-field\">\n            <label for=\"session-rounds\">Session Rounds</label>\n            <input type=\"number\" id=\"session-rounds\" min=\"1\" bind:value={updatedFields.sessionRounds}>\n        </div>\n        {#if !valid}\n        <p class=\"error\">Zero or negative values not admitted</p>\n        {/if}\n        <button>Start</button>\n        \n    </form>\n    \n    <style>\n        form{\n            width:400px;\n            margin: 0 auto;\n            text-align: center;\n            background: #f0f0f0;\n            padding: 40px;\n            border-radius: 10px;\n        }\n        .form-field{\n            margin: 18px;\n        }\n        input{\n            width: 100%;\n            border-radius: 6px;\n        }\n        label{\n            margin: 10px auto;\n            text-align: center;\n        }\n        .error{\n            color:crimson;\n        }\n      </style>",
    "<script>\n    import { createEventDispatcher } from 'svelte';\n\n    let dispatch = createEventDispatcher();\n\n    export let tabs;\n    export let activeTab;\n\n\n</script>\n\n<ul>\n    {#each tabs as tab}\n    <li on:click={() => dispatch('changeTab',tab)}>\n    <div class:active={tab === activeTab}>{tab}</div>\n    </li>\n    {/each}    \n</ul>\n\n<style>\n    ul{\n        display: flex;\n        justify-content: center;\n        list-style-type: none;\n        border: 0;\n        padding: 30px;\n    }\n    li{\n        padding: 0 15px;\n        cursor: pointer;\n        font-size: 20px;\n        text-shadow: black 1px;\n    }\n    .active{\n        border-bottom: 3px solid gray;\n\n    }\n</style>",
    "<script>\n    import { fade,slide,scale } from 'svelte/transition';\n    import TimerStore from '../stores/TimerStore.js';\n\n    let timerParameters = $TimerStore;\n\n    const minutesToSeconds = (minutes) => minutes * 60;\n    const secondsToMinutes = (seconds) => Math.floor(seconds / 60);\n    const padWithZeroes = (number) => number.toString().padStart(2, '0');\n    const State = {idle: 'idle', inProgress: 'in progress', resting: 'resting'};\n  \n    const POMODORO_S = minutesToSeconds(timerParameters.focusTime);\n    const LONG_BREAK_S = minutesToSeconds(timerParameters.longBreakTime);\n    const SHORT_BREAK_S = minutesToSeconds(timerParameters.shortBreakTime);\n  \n    let currentState = State.idle;\n    let pomodoroTime = POMODORO_S;\n    let completedPomodoros = 0;\n    let interval;\n    let paused = false;\n    let message = 'READY TO START'\n    let tasks = 0;\n  \n    function formatTime(timeInSeconds) { \n      const minutes = secondsToMinutes(timeInSeconds);\n      const remainingSeconds = timeInSeconds % 60;\n      return `${padWithZeroes(minutes)}:${padWithZeroes(remainingSeconds)}`;\n    }\n  \n    function startPomodoro() { \n      setState(State.inProgress);\n      message = 'STAY FOCUSED';\n      interval = setInterval(() => {\n        if (pomodoroTime === 0) {\n          completePomodoro();\n        }\n        if (paused){\n        pomodoroTime -= 0;\n        }\n        else{\n        pomodoroTime -= 1;\n\n        }\n      },1000);\n    }\n  \n    function setState(newState){\n      clearInterval(interval)\n      currentState = newState;\n    }\n  \n    function completePomodoro(){\n      completedPomodoros++;\n      if (completedPomodoros === timerParameters.sessionRounds) {\n        message = 'TIME TO TAKE A LONG BREAK'  \n        tasks++;\n        rest(LONG_BREAK_S);\n        completedPomodoros = 0;\n      } else {\n        message = 'TIME TO TAKE A SHORT BREAK'  \n        rest(SHORT_BREAK_S);\n      }\n    }\n  \n    function rest(time){\n      setState(State.resting);\n      pomodoroTime = time;\n      interval = setInterval(() => {\n        if (pomodoroTime === 0) {\n          idle();\n        }\n        if (paused){\n        pomodoroTime -= 0;\n        }\n        else{\n        pomodoroTime -= 1;\n\n        }\n      },1000);\n    }\n  \n    function cancelPomodoro() {\n      // TODO: Add some logic to prompt the user to write down\n      // the cause of the interruption.\n      idle();\n    }\n  \n    function idle(){\n      setState(State.idle);\n      pomodoroTime = POMODORO_S;\n    }\n\n    function nextRound(){\n        if (currentState === State.inProgress){\n            completePomodoro();\n        }\n        else if (currentState === State.resting){\n            message = 'READY TO START'\n            idle();\n        }\n    }\n\n  \n  </script>\n  \n  <div class=\"timer\" in:fade>\n    <time>\n      {formatTime(pomodoroTime)}\n    </time>\n    <p class=\"message\">{message}</p>\n    <div class=\"control-timer\"> \n      <button class=\"primary\" on:click={startPomodoro} disabled={currentState !== State.idle}>Start</button>\n      <button on:click={cancelPomodoro} disabled={currentState !== State.inProgress}>Stop</button>\n      <button on:click={() => {paused = true}} disabled={currentState !== State.inProgress | paused}>Pause</button>\n      <button on:click={() => {paused = false}} disabled={currentState !== State.inProgress | !paused}>Resume</button>\n    </div>\n    <div class=\"control-timer-2\">\n        <button on:click={nextRound}>Next Round</button>\n    </div>\n    <div>\n        <h3>Sessions:</h3>\n        <h3>{completedPomodoros}/{timerParameters.sessionRounds}</h3>\n        <h3>Tasks completed</h3>\n        <h3>{tasks}</h3>\n    </div>\n  </div>\n\n  <style>\n        .timer{\n        background: #f0f0f0;\n        display: block;\n        text-align: center;\n      }\n    time {\n      display: flex;\n      justify-content: center;\n      font-size: 5em;\n      margin-bottom: 0.2em;\n      padding: 30px;\n    }\n    button{\n        border: 1px solid black;\n      cursor: pointer;\n      border-radius: 6px;\n      padding: 8px 12px;\n      font-weight: bold;\n      box-shadow: 1px 2px 3px rgba(0,0,0,0.2);\n    }\n    .control-timer{\n      display: flex;\n      justify-content: center;\n      padding: 40px;\n      gap: 10px;\n    }\n    .message{\n      display: inline;\n      border-radius: 13px;\n      font-weight: bolder;\n      font-size: 20px;\n      color: rgb(94, 94, 94);\n    }\n  </style>\n  "
  ],
  "names": [],
  "mappings": "AAKI,qBAAM,CAAC,AACH,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,IAAI,AACjB,CAAC,AACD,yBAAU,CAAC,AACP,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,cAAc,CACpC,KAAK,CAAE,cAAc,CACrB,OAAO,CAAE,YAAY,AACzB,CAAC;ACPD,kCAAM,CAAC,AACH,UAAU,CAAE,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC7B,OAAO,CAAE,IAAI,AACjB,CAAC,AACD,8BAAE,CAAC,AACC,MAAM,CAAE,CAAC,CACT,UAAU,CAAE,MAAM,CAClB,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,IAAI,AACnB,CAAC,AACD,gBAAE,CAAC,iBAAG,CAAC,AACH,SAAS,CAAE,KAAK,AACpB,CAAC;ACmCG,kBAAI,CAAC,AACD,MAAM,KAAK,CACX,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,UAAU,CAAE,MAAM,CAClB,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,IAAI,AACvB,CAAC,AACD,yBAAW,CAAC,AACR,MAAM,CAAE,IAAI,AAChB,CAAC,AACD,mBAAK,CAAC,AACF,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,GAAG,AACtB,CAAC,AACD,mBAAK,CAAC,AACF,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,UAAU,CAAE,MAAM,AACtB,CAAC,AACD,oBAAM,CAAC,AACH,MAAM,OAAO,AACjB,CAAC;ACxDL,iBAAE,CAAC,AACC,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,eAAe,CAAE,IAAI,CACrB,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,IAAI,AACjB,CAAC,AACD,iBAAE,CAAC,AACC,OAAO,CAAE,CAAC,CAAC,IAAI,CACf,MAAM,CAAE,OAAO,CACf,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,KAAK,CAAC,GAAG,AAC1B,CAAC,AACD,sBAAO,CAAC,AACJ,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,AAEjC,CAAC;AC4FG,qBAAM,CAAC,AACP,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,MAAM,AACpB,CAAC,AACH,IAAI,eAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,SAAS,CAAE,GAAG,CACd,aAAa,CAAE,KAAK,CACpB,OAAO,CAAE,IAAI,AACf,CAAC,AACD,qBAAM,CAAC,AACH,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACzB,MAAM,CAAE,OAAO,CACf,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AACzC,CAAC,AACD,6BAAc,CAAC,AACb,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,OAAO,CAAE,IAAI,CACb,GAAG,CAAE,IAAI,AACX,CAAC,AACD,uBAAQ,CAAC,AACP,OAAO,CAAE,MAAM,CACf,aAAa,CAAE,IAAI,CACnB,WAAW,CAAE,MAAM,CACnB,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,AACxB,CAAC"
}